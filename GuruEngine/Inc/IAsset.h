/************************************************************************
Author:		Dan Strycharske
Date:       02.08.12
File:       IAsset.h
Brief:      
/************************************************************************/

#ifndef IASSET_H
#define IASSET_H


/************************************************************************/
/* Includes
/************************************************************************/
#include <vector>
#include <stdlib.h>
//#include <string>


/************************************************************************/
/* Forward Declarations
/************************************************************************/
class IRawAsset;


/*************************************************************************
 Asset Types
 This enumeration defines the types of assets that can be created.
 The Manager will create a multimap for all of the assets.  It will also
 define several maps for these enum types -> asset*.  These are not shared
 pointers, but simply c pointers into the main assets multimap.
 *************************************************************************/


class IAsset
{
private:
	/************************************************************************/
	/* Private - Member Variables
	/************************************************************************/
	IRawAsset> mRawAsset;

	/************************************************************************/
	/* Private - Member methods
	/************************************************************************/

protected:
	/************************************************************************/
	/* Protected - Member Variables
	/************************************************************************/
	IAsset() : mName(""), mType(UNDEFINED) {}
	std::string mName;
	AssetType mType;
	
	/************************************************************************/
	/* Protected - Member methods
	/************************************************************************/

public:
	/************************************************************************
	* Constructors/Destructor
	************************************************************************/
	virtual ~IAsset() {}

	/************************************************************************/
	/* Public - Member methods
	/************************************************************************/
	virtual void init() = 0;
	
	/************************************************************************/
	/* Public - Member Variables
	/************************************************************************/
};


#endif
