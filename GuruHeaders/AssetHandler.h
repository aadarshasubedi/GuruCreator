/************************************************************************
Author:		Dan Strycharske
Date:       02.08.12
File:       AssetHandler.h
Brief:      
/************************************************************************/

#ifndef ASSETHANDLER_H
#define ASSETHANDLER_H


/************************************************************************/
/* Includes
/************************************************************************/
//#include <stdlib.h>
//#include "GuruAsset.h"


/************************************************************************/
/* Forward Declarations
/************************************************************************/
//
//
//template <typename T>
//class AssetHandler
//{
//private:
//	/************************************************************************/
//	/* Private - Member Variables
//	/************************************************************************/
//	 GuruAsset<T> > mAssetPtr;
//
//	/************************************************************************/
//	/* Private - Member methods
//	/************************************************************************/
//
//protected:
//	/************************************************************************/
//	/* Protected - Member Variables
//	/************************************************************************/
//
//	/************************************************************************/
//	/* Protected - Member methods
//	/************************************************************************/
//
//public:
//	/************************************************************************
//	* Constructors/Destructor
//	************************************************************************/
//	AssetHandler() {}
//	AssetHandler( GuruAsset<T> > asset) : mAssetPtr(asset) {}
//	AssetHandler(const AssetHandler& handle) : mAssetPtr(handle.GetAsset()) {}
//	virtual ~AssetHandler() {}
//
//	/************************************************************************/
//	/* Public - Member methods
//	/************************************************************************/
//	GuruAsset<T> > GetAsset() const { return mAssetPtr; }
//	
//	/************************************************************************/
//	/* Public - Member Variables
//	/************************************************************************/
//};
//
//
//template <>
//class AssetHandler<Texture> 
//{
//private:
//	/************************************************************************/
//	/* Private - Member Variables
//	/************************************************************************/
//	 GuruAsset<Texture> > mAssetPtr;
//
//	/************************************************************************/
//	/* Private - Member methods
//	/************************************************************************/
//
//protected:
//	/************************************************************************/
//	/* Protected - Member Variables
//	/************************************************************************/
//
//	/************************************************************************/
//	/* Protected - Member methods
//	/************************************************************************/
//
//public:
//	/************************************************************************
//	* Constructors/Destructor
//	************************************************************************/
//	AssetHandler() {}
//	AssetHandler( GuruAsset<Texture> > asset) : mAssetPtr(asset) {}
//	AssetHandler(const AssetHandler& handle) : mAssetPtr(handle.GetAsset()) {}
//	virtual ~AssetHandler() {}
//
//	/************************************************************************/
//	/* Public - Member methods
//	/************************************************************************/
//	GuruAsset<Texture> > GetAsset() const { return mAssetPtr; }
//
//	unsigned int GetID() { return mAssetPtr; }
//	
//	/************************************************************************/
//	/* Public - Member Variables
//	/************************************************************************/
//};
//
//typedef AssetHandler<Texture> TextureHandler;

#endif
