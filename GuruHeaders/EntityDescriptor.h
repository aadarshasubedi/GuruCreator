/************************************************************************
Author:		Dan Strycharske
Date:       02.05.12
File:       EntityDescriptor.h
Brief:      
/************************************************************************/


#ifndef EntityDescriptor_H
#define EntityDescriptor_H


/************************************************************************/
/* Includes
/************************************************************************/
#include <string>


/************************************************************************/
/* Forward Declarations
/************************************************************************/


class EntityDescriptor
{
private:
	/************************************************************************/
	/* Private - Member Variables
	/************************************************************************/

	/************************************************************************/
	/* Private - Member methods
	/************************************************************************/

protected:
	/************************************************************************/
	/* Protected - Member Variables
	/************************************************************************/

	/************************************************************************/
	/* Protected - Member methods
	/************************************************************************/

public:
	/************************************************************************
	* Constructors/Destructor
	************************************************************************/
	EntityDescriptor() {}
	virtual ~EntityDescriptor() {}

	/************************************************************************/
	/* Public - Member methods
	/************************************************************************/

	/************************************************************************/
	/* Public - Member Variables
	/************************************************************************/
	std::string mName;

	//To make it opaque/abstract
	virtual void init() = 0;
};


#endif
